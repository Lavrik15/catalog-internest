{"version":3,"sources":["components/Sort/Sort.js","components/SingleItem/SingleItem.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["Sort","_ref","changeSort","onChangeInput","react_default","a","createElement","className","Input","action","icon","placeholder","onChange","e","Button","role","onClick","type","min","SingleItem","item","data","single","Object","slicedToArray","Table","Row","key","id","Cell","title","src","base_url","alt","price","discount","sortGoods","none","list","sortBy","o","TableContent","goods","sortType","isReverseOff","searchValue","isSingle","isSearchIdMatched","searchId","seachString","toLowerCase","trim","filteredGoods","reverse","filter","_item$data","includes","celled","Header","HeaderCell","Body","components_SingleItem_SingleItem","map","Footer","colSpan","Menu","floated","pagination","Item","as","Icon","name","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setGoods","bind","assertThisInitialized","fetchGoods","_this2","axios","method","url","timeout","then","result","catch","error","setState","value","target","_this$state","components_Sort_Sort","components_Table_Table","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6WA2CeA,UAvCF,SAAAC,GAAiC,IAA/BC,EAA+BD,EAA/BC,WAAYC,EAAmBF,EAAnBE,cACvB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,OAAQ,CAAEC,KAAM,UAChBC,YAAY,iCACZJ,UAAU,eACVK,SAAU,SAACC,GAAD,OAAOV,EAAcU,MAEtCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIP,UAAU,iBACVQ,KAAK,SACLC,QAAS,kBAAMd,EAAW,WAE1BE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAEjBH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIP,UAAU,iBACVQ,KAAK,SACLC,QAAS,kBAAMd,EAAW,WAE1BE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAEjBH,EAAAC,EAAAC,cAAA,UACIC,UAAU,iBACVQ,KAAK,SACLC,QAAS,kBAAMd,EAAW,cAE1BE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAGrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOS,KAAK,SAASC,IAAI,IAAIP,YAAY,6CACzCP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOS,KAAK,SAASC,IAAI,IAAIP,YAAY,4GChB1CQ,EAlBI,SAACC,GAAS,IACjBC,EAASD,EAATC,KACHC,EAFoBC,OAAAC,EAAA,EAAAD,CAEVF,EAFU,MAGzB,OACIjB,EAAAC,EAAAC,cAACmB,EAAA,EAAMC,IAAP,CAAWC,IAAKL,EAAOD,KAAKO,IACxBxB,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaP,EAAOD,KAAKO,IACzBxB,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaP,EAAOD,KAAKS,OACzB1B,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVwB,IAAKT,EAAOD,KAAKW,SACjBC,IAAI,MAEb7B,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaP,EAAOD,KAAKa,OACzB9B,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaP,EAAOD,KAAKc,SAAzB,OCVNC,EAAY,CACdC,KAAM,SAAAC,GAAI,OAAIA,GACdR,MAAO,SAAAQ,GAAI,OAAIC,iBAAOD,EAAM,SAACE,GAAD,OAAOA,EAAEnB,KAAKS,SAC1CI,MAAO,SAAAI,GAAI,OAAIC,iBAAOD,EAAM,SAACE,GAAD,OAAOA,EAAEnB,KAAKa,SAC1CC,SAAU,SAAAG,GAAI,OAAIC,iBAAOD,EAAM,SAACE,GAAD,OAAOA,EAAEnB,KAAKc,aA2ElCM,EAxEM,SAAAxC,GAA+E,IAA7EyC,EAA6EzC,EAA7EyC,MAAOC,EAAsE1C,EAAtE0C,SAAUC,EAA4D3C,EAA5D2C,aAAcC,EAA8C5C,EAA9C4C,YAC9CC,GAD4F7C,EAAjC8C,kBAAiC9C,EAAd+C,UACnE,GACTC,EAAcJ,EAAYK,cAAcC,OAMxCC,GAJcR,GAA6B,aAAbD,EAChCP,EAAUO,GAAUD,GACpBN,EAAUO,GAAUD,GAAOW,WAEGC,OAAO,SAAClC,GAAS,IAAAmC,EACnBnC,EAArBC,KAAOS,EADiCyB,EACjCzB,MAAOF,EAD0B2B,EAC1B3B,GAErB,OADIA,IAAOqB,IAAaH,GAAW,GAC5BhB,EAAMoB,cAAcM,SAASP,IAAgBrB,IAAOqB,IAG/D,OACI7C,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOlB,UAAU,QAAQkD,QAAM,GAC3BrD,EAAAC,EAAAC,cAACmB,EAAA,EAAMiC,OAAP,KACItD,EAAAC,EAAAC,cAACmB,EAAA,EAAMC,IAAP,KACItB,EAAAC,EAAAC,cAACmB,EAAA,EAAMkC,WAAP,WACAvD,EAAAC,EAAAC,cAACmB,EAAA,EAAMkC,WAAP,cACAvD,EAAAC,EAAAC,cAACmB,EAAA,EAAMkC,WAAP,cACAvD,EAAAC,EAAAC,cAACmB,EAAA,EAAMkC,WAAP,cACAvD,EAAAC,EAAAC,cAACmB,EAAA,EAAMkC,WAAP,eAIRvD,EAAAC,EAAAC,cAACmB,EAAA,EAAMmC,KAAP,KAESd,EACG1C,EAAAC,EAAAC,cAACuD,EAAD,CAAYxC,KAAM+B,IAClBA,EAAcU,IAAI,SAAC1C,GAAS,IACjBC,EAAQD,EAARC,KACP,OACIjB,EAAAC,EAAAC,cAACmB,EAAA,EAAMC,IAAP,CAAWC,IAAKN,EAAKO,IACjBxB,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaR,EAAKO,IAClBxB,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaR,EAAKS,OAClB1B,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACVwB,IAAKV,EAAKW,SACVC,IAAI,MAEb7B,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaR,EAAKa,OAClB9B,EAAAC,EAAAC,cAACmB,EAAA,EAAMI,KAAP,KAAaR,EAAKc,SAAlB,SAOxB/B,EAAAC,EAAAC,cAACmB,EAAA,EAAMsC,OAAP,KACI3D,EAAAC,EAAAC,cAACmB,EAAA,EAAMC,IAAP,KACItB,EAAAC,EAAAC,cAACmB,EAAA,EAAMkC,WAAP,CAAkBK,QAAQ,KACtB5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAMC,QAAQ,QAAQC,YAAU,GAC5B/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAI3D,MAAI,GAClBN,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,KAAK,kBAEfnE,EAAAC,EAAAC,cAAC2D,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACAjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACAjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACAjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACAjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAI3D,MAAI,GAClBN,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,KAAK,yBCa5BC,sBAhFX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAqD,KAAAJ,IACfE,EAAAnD,OAAAsD,EAAA,EAAAtD,CAAAqD,KAAArD,OAAAuD,EAAA,EAAAvD,CAAAiD,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,CACTtC,MAAO,KACPC,SAAU,OACVC,cAAc,EACdC,YAAa,GACbG,UAAU,GAGd0B,EAAKO,SAAWP,EAAKO,SAASC,KAAd3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAmD,KAChBA,EAAKxE,WAAawE,EAAKxE,WAAWgF,KAAhB3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAmD,KAClBA,EAAKvE,cAAgBuE,EAAKvE,cAAc+E,KAAnB3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAmD,KACrBA,EAAK3B,kBAAoB2B,EAAK3B,kBAAkBmC,KAAvB3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAmD,KAbVA,mFAiBfE,KAAKQ,kDAGI,IAAAC,EAAAT,KACTU,IAAM,CACFC,OAAQ,MACRC,IAAK,cACLC,QAAS,MAERC,KAAK,SAAAC,GAAM,OAAIN,EAAKJ,SAASU,EAAOtE,QACpCuE,MAAM,SAAAC,GAAK,OAAIR,EAAKS,SAAS,CAAED,6CAG/BxE,GACLuD,KAAKkB,SAASzE,sCAGPsB,GACPiC,KAAKkB,SAAS,CACVnD,WACAC,cAAegC,KAAKI,MAAMpC,wDAIG,IAAXmD,EAAW9F,EAArB+F,OAAUD,MACtBnB,KAAKkB,SAAS,CACVjD,YAAakD,8CAIHA,GACdnB,KAAKkB,SAAS,CACV9C,SAAU+C,qCAIT,IAAAE,EAC4DrB,KAAKI,MAA9DtC,EADHuD,EACGvD,MAAOC,EADVsD,EACUtD,SAAUC,EADpBqD,EACoBrD,aAAcC,EADlCoD,EACkCpD,YAAaG,EAD/CiD,EAC+CjD,SACpD,OACI5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAELmC,EAEEtC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4F,EAAD,CACIhG,WAAY0E,KAAK1E,WACjBC,cAAeyE,KAAKzE,gBAExBC,EAAAC,EAAAC,cAAC6F,EAAD,CACIzD,MAAOA,EACPC,SAAUA,EACVC,aAAcA,EACdC,YAAaA,EACbE,kBAAmB6B,KAAK7B,kBACxBC,SAAUA,KAZlB5C,EAAAC,EAAAC,cAAA,sEA5DN8F,cCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.1bcc4094.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input, Button } from 'semantic-ui-react'\r\nimport \"./Sort.css\";\r\n\r\nconst Sort = ({changeSort, onChangeInput}) => {\r\n    return(\r\n        <div className='Sort'>\r\n            <Input action={{ icon: 'search' }}\r\n                   placeholder='Поиск'\r\n                   className='Sort__search'\r\n                   onChange={(e) => onChangeInput(e)}\r\n            />\r\n            <div className='Sort__btn-group'>\r\n                <Button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"title\")}\r\n                >\r\n                    <i className=\"sort alphabet down icon\"/>\r\n                </Button>\r\n                <Button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"price\")}\r\n                >\r\n                    <i className=\"dollar sign icon\"/>\r\n                </Button>\r\n                <button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"discount\")}\r\n                >\r\n                    <i className=\"percent icon\"/>\r\n                </button>\r\n            </div>\r\n            <div className='Sort__Range'>\r\n                <Input type='number' min='0' placeholder='мин (руб.)' />\r\n                <Input type='number' min='0' placeholder='макс (руб.)' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sort;","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst SingleItem = (item) => {\r\n    const { data } = item;\r\n    let [single] = data;\r\n    return(\r\n        <Table.Row key={single.data.id}>\r\n            <Table.Cell>{single.data.id}</Table.Cell>\r\n            <Table.Cell>{single.data.title}</Table.Cell>\r\n            <Table.Cell>\r\n                <img className='Table__Single'\r\n                     src={single.data.base_url}\r\n                     alt=''/>\r\n            </Table.Cell>\r\n            <Table.Cell>{single.data.price}</Table.Cell>\r\n            <Table.Cell>{single.data.discount}%</Table.Cell>\r\n        </Table.Row>\r\n    );\r\n};\r\n\r\nexport default SingleItem;","import React from 'react';\r\nimport { sortBy } from 'lodash';\r\nimport {Icon, Menu, Table} from 'semantic-ui-react'\r\nimport './Table.css';\r\nimport SingleItem from \"../SingleItem/SingleItem\";\r\n\r\nconst sortGoods = {\r\n    none: list => list,\r\n    title: list => sortBy(list, (o) => o.data.title),\r\n    price: list => sortBy(list, (o) => o.data.price),\r\n    discount: list => sortBy(list, (o) => o.data.discount)\r\n};\r\n\r\nconst TableContent = ({goods, sortType, isReverseOff, searchValue, isSearchIdMatched, searchId}) => {\r\n    let isSingle = false;\r\n    const seachString = searchValue.toLowerCase().trim();\r\n\r\n    const sortedGoods = isReverseOff && sortType !== 'discount'?\r\n        sortGoods[sortType](goods) :\r\n        sortGoods[sortType](goods).reverse();\r\n\r\n    const filteredGoods = sortedGoods.filter((item) => {\r\n        const {data: {title, id}} = item;\r\n        if (id === seachString) isSingle = true;\r\n        return title.toLowerCase().includes(seachString) || id === seachString;\r\n    });\r\n\r\n    return (\r\n        <Table className='Table' celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>id</Table.HeaderCell>\r\n                    <Table.HeaderCell>title</Table.HeaderCell>\r\n                    <Table.HeaderCell>image</Table.HeaderCell>\r\n                    <Table.HeaderCell>price</Table.HeaderCell>\r\n                    <Table.HeaderCell>sale</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {\r\n                    (isSingle) ?\r\n                        <SingleItem data={filteredGoods}/> :\r\n                        filteredGoods.map((item) => {\r\n                            const {data} = item;\r\n                            return (\r\n                                <Table.Row key={data.id}>\r\n                                    <Table.Cell>{data.id}</Table.Cell>\r\n                                    <Table.Cell>{data.title}</Table.Cell>\r\n                                    <Table.Cell>\r\n                                        <img className='Table__image'\r\n                                             src={data.base_url}\r\n                                             alt=''/>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{data.price}</Table.Cell>\r\n                                    <Table.Cell>{data.discount}%</Table.Cell>\r\n                                </Table.Row>\r\n                            );\r\n                        })\r\n                }\r\n            </Table.Body>\r\n\r\n            <Table.Footer>\r\n                <Table.Row>\r\n                    <Table.HeaderCell colSpan='5'>\r\n                        <Menu floated='right' pagination>\r\n                            <Menu.Item as='a' icon>\r\n                                <Icon name='chevron left'/>\r\n                            </Menu.Item>\r\n                            <Menu.Item as='a'>1</Menu.Item>\r\n                            <Menu.Item as='a'>2</Menu.Item>\r\n                            <Menu.Item as='a'>3</Menu.Item>\r\n                            <Menu.Item as='a'>4</Menu.Item>\r\n                            <Menu.Item as='a' icon>\r\n                                <Icon name='chevron right'/>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n    );\r\n}\r\n\r\n\r\nexport default TableContent;\r\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Sort from './components/Sort/Sort';\nimport Table from './components/Table/Table';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goods: null,\n            sortType: \"none\",\n            isReverseOff: true,\n            searchValue: \"\",\n            searchId: false\n        };\n\n        this.setGoods = this.setGoods.bind(this);\n        this.changeSort = this.changeSort.bind(this);\n        this.onChangeInput = this.onChangeInput.bind(this);\n        this.isSearchIdMatched = this.isSearchIdMatched.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchGoods();\n    }\n\n    fetchGoods() {\n        axios({\n            method: 'get',\n            url: './shop.json',\n            timeout: 10000\n        })\n            .then(result => this.setGoods(result.data))\n            .catch(error => this.setState({ error }))\n    }\n\n    setGoods(data) {\n        this.setState(data);\n    }\n\n    changeSort(sortType) {\n        this.setState({\n            sortType,\n            isReverseOff: !this.state.isReverseOff\n        });\n    }\n\n    onChangeInput( {target: { value }} ) {\n        this.setState({\n            searchValue: value\n        });\n    }\n\n    isSearchIdMatched(value) {\n        this.setState({\n            searchId: value\n        });\n    }\n\n    render() {\n        const { goods, sortType, isReverseOff, searchValue, searchId } = this.state;\n        return (\n            <div className='App'>\n                {\n                    (!goods)?\n                        <h1>Загрузка</h1>:\n                        <div>\n                            <Sort\n                                changeSort={this.changeSort}\n                                onChangeInput={this.onChangeInput}\n                            />\n                            <Table\n                                goods={goods}\n                                sortType={sortType}\n                                isReverseOff={isReverseOff}\n                                searchValue={searchValue}\n                                isSearchIdMatched={this.isSearchIdMatched}\n                                searchId={searchId}\n                            />\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}