{"version":3,"sources":["components/Sort/Sort.js","components/SingleItem/SingleItem.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["Sort","_ref","changeSort","onChangeInput","react_default","a","createElement","className","Input","placeholder","onChange","e","Button","role","onClick","type","min","SingleItem","item","data","single","Object","slicedToArray","Table","Row","key","id","Cell","title","src","base_url","alt","price","discount","sortGoods","none","list","sortBy","o","TableContent","goods","sortType","isReverseOff","searchValue","itemsOnPage","isSearchIdMatched","searchId","showMoreItems","isSingle","searchString","toLowerCase","trim","sortedGoods","reverse","filter","_item$data","includes","celled","Header","HeaderCell","Body","components_SingleItem_SingleItem","slice","map","Footer","colSpan","length","disabled","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","defaultItemsOnPage","setGoods","bind","assertThisInitialized","fetchGoods","_this2","axios","method","url","timeout","then","result","catch","error","setState","value","target","_this$state","isDisabledBtn","components_Sort_Sort","components_Table_Table","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3decf91b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input, Button } from 'semantic-ui-react'\r\nimport \"./Sort.css\";\r\n\r\nconst Sort = ({changeSort, onChangeInput}) => {\r\n    return(\r\n        <div className='Sort'>\r\n            <Input\r\n                   placeholder='Поиск'\r\n                   className='Sort__search'\r\n                   onChange={(e) => onChangeInput(e)}\r\n            />\r\n            <div className='Sort__btn-group'>\r\n                <Button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"title\")}\r\n                >\r\n                    <i className=\"sort alphabet down icon\"/>\r\n                </Button>\r\n                <Button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"price\")}\r\n                >\r\n                    <i className=\"dollar sign icon\"/>\r\n                </Button>\r\n                <button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"discount\")}\r\n                >\r\n                    <i className=\"percent icon\"/>\r\n                </button>\r\n            </div>\r\n            <div className='Sort__Range'>\r\n                <Input type='number' min='0' placeholder='мин (руб.)' />\r\n                <Input type='number' min='0' placeholder='макс (руб.)' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sort;","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst SingleItem = (item) => {\r\n    const { data } = item;\r\n    let [single] = data;\r\n    return(\r\n        <Table.Row key={single.data.id}>\r\n            <Table.Cell>{single.data.id}</Table.Cell>\r\n            <Table.Cell>{single.data.title}</Table.Cell>\r\n            <Table.Cell>\r\n                <img className='Table__Single'\r\n                     src={single.data.base_url}\r\n                     alt=''/>\r\n            </Table.Cell>\r\n            <Table.Cell>{single.data.price}</Table.Cell>\r\n            <Table.Cell>{single.data.discount}%</Table.Cell>\r\n        </Table.Row>\r\n    );\r\n};\r\n\r\nexport default SingleItem;","import React from 'react';\r\nimport { sortBy } from 'lodash';\r\nimport {Table, Button} from 'semantic-ui-react';\r\nimport './Table.css';\r\nimport SingleItem from \"../SingleItem/SingleItem\";\r\n\r\nconst sortGoods = {\r\n    none: list => list,\r\n    title: list => sortBy(list, (o) => o.data.title),\r\n    price: list => sortBy(list, (o) => o.data.price),\r\n    discount: list => sortBy(list, (o) => o.data.discount)\r\n};\r\n\r\nconst TableContent = ({goods, sortType, isReverseOff, searchValue, isSearchIdMatched, searchId, itemsOnPage, showMoreItems}) => {\r\n    let isSingle = false;\r\n\r\n    const searchString = searchValue.toLowerCase().trim();\r\n\r\n    const sortedGoods = (\r\n        isReverseOff && sortType !== 'discount'?\r\n            sortGoods[sortType](goods) :\r\n            sortGoods[sortType](goods).reverse())\r\n        .filter((item) => {\r\n            const {data: {title, id}} = item;\r\n            if (id === searchString) isSingle = true;\r\n            return title.toLowerCase().includes(searchString) || id === searchString;\r\n        });\r\n\r\n    const isBtnDisabled = () => {\r\n        const goodsLen = sortedGoods.length;\r\n        if (goodsLen >= itemsOnPage) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n        <Table className='Table' celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>id</Table.HeaderCell>\r\n                    <Table.HeaderCell>title</Table.HeaderCell>\r\n                    <Table.HeaderCell>image</Table.HeaderCell>\r\n                    <Table.HeaderCell>price</Table.HeaderCell>\r\n                    <Table.HeaderCell>sale</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {\r\n                    (isSingle) ?\r\n                        <SingleItem data={sortedGoods}/> :\r\n                        sortedGoods.slice(0, itemsOnPage).map((item) => {\r\n                            const {data} = item;\r\n                            return (\r\n                                <Table.Row key={data.id}>\r\n                                    <Table.Cell>{data.id}</Table.Cell>\r\n                                    <Table.Cell>{data.title}</Table.Cell>\r\n                                    <Table.Cell>\r\n                                        <img className='Table__image'\r\n                                             src={data.base_url}\r\n                                             alt=''/>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{data.price}</Table.Cell>\r\n                                    <Table.Cell>{data.discount}%</Table.Cell>\r\n                                </Table.Row>\r\n                            );\r\n                        })\r\n                }\r\n            </Table.Body>\r\n\r\n            <Table.Footer>\r\n                <Table.Row>\r\n                    <Table.HeaderCell colSpan='5'>\r\n                        {\r\n                            (!isBtnDisabled()) ?\r\n                                <Button onClick={() => showMoreItems()}>показать еще</Button> :\r\n                                <Button disabled>показать еще</Button>\r\n                        }\r\n                    </Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n    );\r\n}\r\n\r\n\r\nexport default TableContent;\r\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Sort from './components/Sort/Sort';\nimport Table from './components/Table/Table';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goods: null,\n            sortType: \"none\",\n            isReverseOff: true,\n            searchValue: \"\",\n            searchId: false,\n            itemsOnPage: 5,\n            defaultItemsOnPage: 5\n        };\n\n        this.setGoods = this.setGoods.bind(this);\n        this.changeSort = this.changeSort.bind(this);\n        this.onChangeInput = this.onChangeInput.bind(this);\n        this.isSearchIdMatched = this.isSearchIdMatched.bind(this);\n        this.showMoreItems = this.showMoreItems.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchGoods();\n    }\n\n    fetchGoods() {\n        axios({\n            method: 'get',\n            url: './shop.json',\n            timeout: 10000\n        })\n            .then(result => this.setGoods(result.data))\n            .catch(error => this.setState({ error }))\n    }\n\n    setGoods(data) {\n        this.setState(data);\n    }\n\n    changeSort(sortType) {\n        this.setState({\n            sortType,\n            isReverseOff: !this.state.isReverseOff\n        });\n    }\n\n    onChangeInput( {target: { value }} ) {\n        this.setState({\n            searchValue: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    isSearchIdMatched(value) {\n        this.setState({\n            searchId: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    showMoreItems() {\n        const { itemsOnPage } = this.state;\n        this.setState({\n            itemsOnPage: itemsOnPage + itemsOnPage\n        });\n\n\n    }\n\n    render() {\n        const { goods, sortType, isReverseOff, searchValue, searchId, itemsOnPage, isDisabledBtn } = this.state;\n        return (\n            <div className='App'>\n                {\n                    (!goods)?\n                        <h1>Загрузка</h1>:\n                        <div>\n                            <Sort\n                                changeSort={this.changeSort}\n                                onChangeInput={this.onChangeInput}\n                            />\n                            <Table\n                                goods={goods}\n                                sortType={sortType}\n                                isReverseOff={isReverseOff}\n                                searchValue={searchValue}\n                                isSearchIdMatched={this.isSearchIdMatched}\n                                searchId={searchId}\n                                itemsOnPage={itemsOnPage}\n                                showMoreItems={this.showMoreItems}\n                                isDisabledBtn={isDisabledBtn}\n                            />\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}