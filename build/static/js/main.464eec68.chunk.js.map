{"version":3,"sources":["components/Sort/Sort.js","components/SingleItem/SingleItem.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["Sort","_ref","changeSort","searchValue","onChangeInput","onMinChange","onMaxChange","removeFilter","minCost","maxCost","react_default","a","createElement","className","Input","placeholder","value","onChange","e","Button","role","onClick","Form","Group","widths","type","min","label","fluid","SingleItem","item","data","single","Object","slicedToArray","Table","Row","key","id","Cell","title","src","base_url","alt","price","discount","sortGoods","none","list","sortBy","o","TableContent","goods","sortType","isReverseOff","itemsOnPage","isSearchIdMatched","searchId","showMoreItems","isSingle","searchString","toLowerCase","trim","sortedGoods","reverse","filter","_item$data","includes","Number","celled","Header","HeaderCell","Body","components_SingleItem_SingleItem","slice","map","Footer","colSpan","length","disabled","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","defaultItemsOnPage","setGoods","bind","assertThisInitialized","fetchGoods","window","addEventListener","saveStateToLocalStorage","removeEventListener","_this2","JSON","parse","localStorage","getItem","hydrateStateWithLocalStorage","axios","method","url","timeout","then","result","catch","error","setState","setItem","stringify","hasOwnProperty","defineProperty","target","_ref2","_ref3","max","Infinity","_this$state","components_Sort_Sort","components_Table_Table","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.464eec68.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input, Button, Form } from 'semantic-ui-react'\r\nimport \"./Sort.css\";\r\n\r\nconst Sort = ({changeSort, searchValue, onChangeInput, onMinChange, onMaxChange ,removeFilter, minCost, maxCost}) => {\r\n    return(\r\n        <div>\r\n            <div className='Sort ui grid stackable '>\r\n                <div className='row'>\r\n                    <Input\r\n                        placeholder='Поиск'\r\n                        className='Sort__search four wide column'\r\n                        value={searchValue}\r\n                        onChange={(e) => onChangeInput(e)}\r\n                    />\r\n                    <div className='Sort__btn-group six wide column'>\r\n                        <Button\r\n                            className='ui icon button'\r\n                            role='button'\r\n                            onClick={() => changeSort(\"title\")}\r\n                        >\r\n                            <i className=\"sort alphabet down icon\"/>\r\n                        </Button>\r\n                        <Button\r\n                            className='ui icon button'\r\n                            role='button'\r\n                            onClick={() => changeSort(\"price\")}\r\n                        >\r\n                            <i className=\"dollar sign icon\"/>\r\n                        </Button>\r\n                        <button\r\n                            className='ui icon button'\r\n                            role='button'\r\n                            onClick={() => changeSort(\"discount\")}\r\n                        >\r\n                            <i className=\"percent icon\"/>\r\n                        </button>\r\n                        <span\r\n                            className='ui icon button'\r\n                            role='button'\r\n                            onClick={() => removeFilter()}\r\n                        >убрать фильтры\r\n                         <i className=\"cancel icon\"/>\r\n                    </span>\r\n                    </div>\r\n                    <div className='Sort__Range four wide column fields'>\r\n                        <Form>\r\n                            <Form.Group widths='equal'>\r\n                                {/*<label>мин (руб.)</label>*/}\r\n                                <Form.Input\r\n                                    type='number'\r\n                                    min='0'\r\n                                    placeholder='мин. руб.)'\r\n                                    label='мин. руб.'\r\n                                    fluid\r\n                                    value={minCost}\r\n                                    onChange={(e) => onMinChange(e)}\r\n                                />\r\n                                <Form.Input\r\n                                    type='number'\r\n                                    min='0'\r\n                                    placeholder='макс. руб.'\r\n                                    label='макс. руб.'\r\n                                    fluid\r\n                                    value={maxCost}\r\n                                    onChange={(e) => onMaxChange(e)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sort;","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst SingleItem = (item) => {\r\n    const { data } = item;\r\n    let [single] = data;\r\n    return (\r\n        (single) ?\r\n            <Table.Row key={single.data.id}>\r\n                <Table.Cell>{single.data.id}</Table.Cell>\r\n                <Table.Cell>{single.data.title}</Table.Cell>\r\n                <Table.Cell>\r\n                    <img className='Table__Single'\r\n                         src={single.data.base_url}\r\n                         alt=''/>\r\n                </Table.Cell>\r\n                <Table.Cell>{single.data.price}</Table.Cell>\r\n                <Table.Cell>{single.data.discount}%</Table.Cell>\r\n            </Table.Row> :\r\n            null\r\n    )\r\n};\r\n\r\nexport default SingleItem;","import React from 'react';\r\nimport { sortBy } from 'lodash';\r\nimport {Table, Button} from 'semantic-ui-react';\r\nimport './Table.css';\r\nimport SingleItem from \"../SingleItem/SingleItem\";\r\n\r\nconst sortGoods = {\r\n    none: list => list,\r\n    title: list => sortBy(list, (o) => o.data.title),\r\n    price: list => sortBy(list, (o) => o.data.price),\r\n    discount: list => sortBy(list, (o) => o.data.discount)\r\n};\r\n\r\nconst TableContent = ({goods, sortType, isReverseOff, searchValue, isSearchIdMatched, searchId, itemsOnPage, showMoreItems, minCost, maxCost}) => {\r\n    let isSingle = false;\r\n\r\n    const searchString = searchValue.toLowerCase().trim();\r\n\r\n    const sortedGoods = (\r\n        isReverseOff && sortType !== 'discount'?\r\n            sortGoods[sortType](goods) :\r\n            sortGoods[sortType](goods).reverse())\r\n        .filter(item => {\r\n            const {data: {title, id}} = item;\r\n            if (id === searchString) isSingle = true;\r\n            return title.toLowerCase().includes(searchString) || id === searchString;\r\n        })\r\n        .filter(item => {\r\n            const {data: { price }} = item;\r\n            const min = Number(minCost);\r\n            return (price >= min && (maxCost ? price <= Number(maxCost) : true));\r\n        });\r\n\r\n    const isBtnDisabled = () => {\r\n        const goodsLen = sortedGoods.length;\r\n        return (goodsLen >= itemsOnPage);\r\n    };\r\n\r\n\r\n    return (\r\n        <Table className='Table' celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>id</Table.HeaderCell>\r\n                    <Table.HeaderCell>title</Table.HeaderCell>\r\n                    <Table.HeaderCell>image</Table.HeaderCell>\r\n                    <Table.HeaderCell>price</Table.HeaderCell>\r\n                    <Table.HeaderCell>sale</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {\r\n                    (isSingle) ?\r\n                        <SingleItem data={sortedGoods}/> :\r\n                        sortedGoods.slice(0, itemsOnPage).map((item) => {\r\n                            const {data} = item;\r\n                            return (\r\n                                <Table.Row key={data.id}>\r\n                                    <Table.Cell>{data.id}</Table.Cell>\r\n                                    <Table.Cell>{data.title}</Table.Cell>\r\n                                    <Table.Cell>\r\n                                        <img className='Table__image'\r\n                                             src={data.base_url}\r\n                                             alt=''/>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{data.price}</Table.Cell>\r\n                                    <Table.Cell>{data.discount}%</Table.Cell>\r\n                                </Table.Row>\r\n                            );\r\n                        })\r\n                }\r\n            </Table.Body>\r\n\r\n            <Table.Footer>\r\n                <Table.Row>\r\n                    <Table.HeaderCell colSpan='5'>\r\n                        {\r\n                            (isBtnDisabled()) ?\r\n                                <Button onClick={() => showMoreItems()}>показать еще</Button> :\r\n                                <Button disabled>показать еще</Button>\r\n                        }\r\n                    </Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n    );\r\n}\r\n\r\n\r\nexport default TableContent;\r\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Sort from './components/Sort/Sort';\nimport Table from './components/Table/Table';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goods: null,\n            sortType: \"none\",\n            isReverseOff: true,\n            searchValue: \"\",\n            searchId: false,\n            itemsOnPage: 5,\n            defaultItemsOnPage: 5,\n            minCost: 0,\n            maxCost: 0\n        };\n\n        this.setGoods = this.setGoods.bind(this);\n        this.changeSort = this.changeSort.bind(this);\n        this.onChangeInput = this.onChangeInput.bind(this);\n        this.isSearchIdMatched = this.isSearchIdMatched.bind(this);\n        this.showMoreItems = this.showMoreItems.bind(this);\n        this.onMinChange = this.onMinChange.bind(this);\n        this.onMaxChange = this.onMaxChange.bind(this);\n        this.removeFilter = this.removeFilter.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchGoods();\n\n        window.addEventListener(\n            \"beforeunload\",\n            this.saveStateToLocalStorage.bind(this)\n        );\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\n            \"beforeunload\",\n            this.saveStateToLocalStorage.bind(this)\n        );\n\n        this.saveStateToLocalStorage();\n    }\n\n    fetchGoods() {\n\n        const cached = JSON.parse(localStorage.getItem('goods'));\n        if (cached) {\n            this.hydrateStateWithLocalStorage();\n            return;\n        }\n\n        axios({\n            method: 'get',\n            url: './shop.json',\n            timeout: 10000\n        })\n            .then(result => this.setGoods(result.data))\n            .catch(error => this.setState({ error }))\n    }\n\n    setGoods(data) {\n        this.setState(data);\n    }\n\n    saveStateToLocalStorage() {\n        // for every item in React state\n        for (let key in this.state) {\n            // save to localStorage\n            localStorage.setItem(key, JSON.stringify(this.state[key]));\n        }\n    }\n\n    hydrateStateWithLocalStorage() {\n        // for all items in state\n        for (let key in this.state) {\n            // if the key exists in localStorage\n            if (localStorage.hasOwnProperty(key)) {\n                // get the key's value from localStorage\n                let value = localStorage.getItem(key);\n\n                // parse the localStorage string and setState\n                try {\n                    value = JSON.parse(value);\n                    this.setState({ [key]: value });\n                } catch (e) {\n                    // handle empty string\n                    this.setState({ [key]: value });\n                }\n            }\n        }\n    }\n\n    changeSort(sortType) {\n        this.setState({\n            sortType,\n            isReverseOff: !this.state.isReverseOff\n        });\n    }\n\n    onChangeInput( {target: { value }} ) {\n        this.setState({\n            searchValue: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    isSearchIdMatched(value) {\n        this.setState({\n            searchId: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    showMoreItems() {\n        const { itemsOnPage } = this.state;\n        this.setState({\n            itemsOnPage: itemsOnPage + itemsOnPage\n        });\n    }\n\n    onMinChange({target: { value }}) {\n        this.setState({\n            minCost: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    onMaxChange({target: { value }}) {\n        const max = value === '' ? Infinity : value;\n        this.setState({\n            maxCost: max,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    removeFilter() {\n        this.setState({\n            sortType: \"none\",\n            isReverseOff: true,\n            searchValue: \"\",\n            searchId: false,\n            itemsOnPage: 5,\n            defaultItemsOnPage: 5,\n            minCost: 0,\n            maxCost: 0\n        });\n    }\n\n    render() {\n        const { goods, sortType, isReverseOff, searchValue, searchId, itemsOnPage, minCost, maxCost } = this.state;\n        return (\n            <div className='App'>\n                {\n                    (!goods)?\n                        <h1>Загрузка</h1>:\n                        <div>\n                            <Sort\n                                changeSort={this.changeSort}\n                                onChangeInput={this.onChangeInput}\n                                onMinChange={this.onMinChange}\n                                onMaxChange={this.onMaxChange}\n                                removeFilter={this.removeFilter}\n                                searchValue={searchValue}\n                                minCost={minCost}\n                                maxCost={maxCost}\n                            />\n                            <Table\n                                goods={goods}\n                                sortType={sortType}\n                                isReverseOff={isReverseOff}\n                                searchValue={searchValue}\n                                isSearchIdMatched={this.isSearchIdMatched}\n                                searchId={searchId}\n                                itemsOnPage={itemsOnPage}\n                                showMoreItems={this.showMoreItems}\n                                minCost={minCost}\n                                maxCost={maxCost}\n                            />\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}