{"version":3,"sources":["components/Sort/Sort.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["Sort","react_default","a","createElement","className","Input","action","icon","placeholder","Button","role","type","min","Component","TableExamplePagination","Table","celled","Header","Row","HeaderCell","Body","Cell","src","alt","Footer","colSpan","Menu","floated","pagination","Item","as","Icon","name","App","components_Sort_Sort","components_Table_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uVA2BeA,2LArBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,OAAQ,CAAEC,KAAM,UAAYC,YAAY,YAAYJ,UAAU,iBACrEH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQL,UAAU,iBAAiBM,KAAK,UACpCT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAEjBH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQL,UAAU,iBAAiBM,KAAK,UACpCT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAEjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBM,KAAK,UACpCT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOM,KAAK,SAASC,IAAI,IAAIJ,YAAY,6CACzCP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOM,KAAK,SAASC,IAAI,IAAIJ,YAAY,4DAhB1CK,yCCqEJC,UArEgB,kBAC3Bb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOX,UAAU,QAAQY,QAAM,GAC3Bf,EAAAC,EAAAC,cAACY,EAAA,EAAME,OAAP,KACIhB,EAAAC,EAAAC,cAACY,EAAA,EAAMG,IAAP,KACIjB,EAAAC,EAAAC,cAACY,EAAA,EAAMI,WAAP,WACAlB,EAAAC,EAAAC,cAACY,EAAA,EAAMI,WAAP,cACAlB,EAAAC,EAAAC,cAACY,EAAA,EAAMI,WAAP,cACAlB,EAAAC,EAAAC,cAACY,EAAA,EAAMI,WAAP,cACAlB,EAAAC,EAAAC,cAACY,EAAA,EAAMI,WAAP,eAIRlB,EAAAC,EAAAC,cAACY,EAAA,EAAMK,KAAP,KACInB,EAAAC,EAAAC,cAACY,EAAA,EAAMG,IAAP,KACIjB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,YAGApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,+KACApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,KACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAekB,IAAI,4EAA4EC,IAAI,MAEtHtB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,iBACApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,YAEJpB,EAAAC,EAAAC,cAACY,EAAA,EAAMG,IAAP,KACIjB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,YAGApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,+KACApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,KACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAekB,IAAI,4EAA4EC,IAAI,MAEtHtB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,iBACApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,YAEJpB,EAAAC,EAAAC,cAACY,EAAA,EAAMG,IAAP,KACIjB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,YAGApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,+KACApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,KACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAekB,IAAI,4EAA4EC,IAAI,MAEtHtB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,iBACApB,EAAAC,EAAAC,cAACY,EAAA,EAAMM,KAAP,aAIRpB,EAAAC,EAAAC,cAACY,EAAA,EAAMS,OAAP,KACIvB,EAAAC,EAAAC,cAACY,EAAA,EAAMG,IAAP,KACIjB,EAAAC,EAAAC,cAACY,EAAA,EAAMI,WAAP,CAAkBM,QAAQ,KACtBxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,QAAQ,QAAQC,YAAU,GAC5B3B,EAAAC,EAAAC,cAACuB,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAIvB,MAAI,GAClBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,KAAK,kBAEf/B,EAAAC,EAAAC,cAACuB,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA7B,EAAAC,EAAAC,cAACuB,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA7B,EAAAC,EAAAC,cAACuB,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA7B,EAAAC,EAAAC,cAACuB,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA7B,EAAAC,EAAAC,cAACuB,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAIvB,MAAI,GAClBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,KAAK,0BC/CxBC,2LATX,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,cALUtB,cCMEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4000fe70.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport { Input, Button } from 'semantic-ui-react'\r\nimport \"./Sort.css\";\r\n\r\nclass Sort extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Sort'>\r\n                <Input action={{ icon: 'search' }} placeholder='Search...' className='Sort__search'/>\r\n                <Button className='ui icon button' role='button'>\r\n                    <i className=\"sort alphabet down icon\"/>\r\n                </Button>\r\n                <Button className='ui icon button' role='button'>\r\n                    <i className=\"dollar sign icon\"/>\r\n                </Button>\r\n                <button className='ui icon button' role='button'>\r\n                    <i className=\"percent icon\"/>\r\n                </button>\r\n                <div className='Sort__Range'>\r\n                    <Input type='number' min='0' placeholder='мин (руб.)' />\r\n                    <Input type='number' min='0' placeholder='макс (руб.)' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;","import React from 'react'\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react'\r\nimport './Table.css';\r\n\r\nconst TableExamplePagination = () => (\r\n    <Table className='Table' celled>\r\n        <Table.Header>\r\n            <Table.Row>\r\n                <Table.HeaderCell>id</Table.HeaderCell>\r\n                <Table.HeaderCell>title</Table.HeaderCell>\r\n                <Table.HeaderCell>image</Table.HeaderCell>\r\n                <Table.HeaderCell>price</Table.HeaderCell>\r\n                <Table.HeaderCell>sale</Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n            <Table.Row>\r\n                <Table.Cell>\r\n                    123\r\n                </Table.Cell>\r\n                <Table.Cell>Пуловер тонкой вязки с бусинами</Table.Cell>\r\n                <Table.Cell>\r\n                    <img className='Table__image' src=\"http://image01.bonprix.ru/assets/319x448/1537366319/18273773-GBO0WHqn.jpg\" alt=\"\"/>\r\n                </Table.Cell>\r\n                <Table.Cell>12312356</Table.Cell>\r\n                <Table.Cell>5%</Table.Cell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n                <Table.Cell>\r\n                    123\r\n                </Table.Cell>\r\n                <Table.Cell>Пуловер тонкой вязки с бусинами</Table.Cell>\r\n                <Table.Cell>\r\n                    <img className='Table__image' src=\"http://image01.bonprix.ru/assets/319x448/1537366319/18273773-GBO0WHqn.jpg\" alt=\"\"/>\r\n                </Table.Cell>\r\n                <Table.Cell>12312356</Table.Cell>\r\n                <Table.Cell>5%</Table.Cell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n                <Table.Cell>\r\n                    123\r\n                </Table.Cell>\r\n                <Table.Cell>Пуловер тонкой вязки с бусинами</Table.Cell>\r\n                <Table.Cell>\r\n                    <img className='Table__image' src=\"http://image01.bonprix.ru/assets/319x448/1537366319/18273773-GBO0WHqn.jpg\" alt=\"\"/>\r\n                </Table.Cell>\r\n                <Table.Cell>12312356</Table.Cell>\r\n                <Table.Cell>5%</Table.Cell>\r\n            </Table.Row>\r\n        </Table.Body>\r\n\r\n        <Table.Footer>\r\n            <Table.Row>\r\n                <Table.HeaderCell colSpan='5'>\r\n                    <Menu floated='right' pagination>\r\n                        <Menu.Item as='a' icon>\r\n                            <Icon name='chevron left' />\r\n                        </Menu.Item>\r\n                        <Menu.Item as='a'>1</Menu.Item>\r\n                        <Menu.Item as='a'>2</Menu.Item>\r\n                        <Menu.Item as='a'>3</Menu.Item>\r\n                        <Menu.Item as='a'>4</Menu.Item>\r\n                        <Menu.Item as='a' icon>\r\n                            <Icon name='chevron right' />\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Footer>\r\n    </Table>\r\n)\r\n\r\nexport default TableExamplePagination\r\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Sort from \"./components/Sort/Sort\";\nimport Table from \"./components/Table/Table\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Sort/>\n        <Table/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}