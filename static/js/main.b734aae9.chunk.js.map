{"version":3,"sources":["components/Sort/Sort.js","components/SingleItem/SingleItem.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["Sort","_ref","changeSort","onChangeInput","onMinChange","onMaxChange","react_default","a","createElement","className","Input","placeholder","onChange","e","Button","role","onClick","type","min","SingleItem","item","data","single","Object","slicedToArray","Table","Row","key","id","Cell","title","src","base_url","alt","price","discount","sortGoods","none","list","sortBy","o","TableContent","goods","sortType","isReverseOff","searchValue","itemsOnPage","isSearchIdMatched","searchId","showMoreItems","minCost","maxCost","isSingle","searchString","toLowerCase","trim","sortedGoods","reverse","filter","_item$data","includes","Number","max","celled","Header","HeaderCell","Body","components_SingleItem_SingleItem","slice","map","Footer","colSpan","length","disabled","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","defaultItemsOnPage","Infinity","setGoods","bind","assertThisInitialized","fetchGoods","_this2","axios","method","url","timeout","then","result","catch","error","setState","value","target","_ref2","_ref3","_this$state","components_Sort_Sort","components_Table_Table","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b734aae9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input, Button } from 'semantic-ui-react'\r\nimport \"./Sort.css\";\r\n\r\nconst Sort = ({changeSort, onChangeInput, onMinChange, onMaxChange}) => {\r\n    return(\r\n        <div className='Sort'>\r\n            <Input\r\n                   placeholder='Поиск'\r\n                   className='Sort__search'\r\n                   onChange={(e) => onChangeInput(e)}\r\n            />\r\n            <div className='Sort__btn-group'>\r\n                <Button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"title\")}\r\n                >\r\n                    <i className=\"sort alphabet down icon\"/>\r\n                </Button>\r\n                <Button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"price\")}\r\n                >\r\n                    <i className=\"dollar sign icon\"/>\r\n                </Button>\r\n                <button\r\n                    className='ui icon button'\r\n                    role='button'\r\n                    onClick={() => changeSort(\"discount\")}\r\n                >\r\n                    <i className=\"percent icon\"/>\r\n                </button>\r\n            </div>\r\n            <div className='Sort__Range'>\r\n                <Input\r\n                    type='number'\r\n                    min='0'\r\n                    placeholder='мин (руб.)'\r\n                    onChange={(e) => onMinChange(e)}\r\n                />\r\n                <Input\r\n                    type='number'\r\n                    min='0'\r\n                    placeholder='макс (руб.)'\r\n                    onChange={(e) => onMaxChange(e)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sort;","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst SingleItem = (item) => {\r\n    const { data } = item;\r\n    let [single] = data;\r\n    return (\r\n        (single) ?\r\n            <Table.Row key={single.data.id}>\r\n                <Table.Cell>{single.data.id}</Table.Cell>\r\n                <Table.Cell>{single.data.title}</Table.Cell>\r\n                <Table.Cell>\r\n                    <img className='Table__Single'\r\n                         src={single.data.base_url}\r\n                         alt=''/>\r\n                </Table.Cell>\r\n                <Table.Cell>{single.data.price}</Table.Cell>\r\n                <Table.Cell>{single.data.discount}%</Table.Cell>\r\n            </Table.Row> :\r\n            null\r\n    )\r\n};\r\n\r\nexport default SingleItem;","import React from 'react';\r\nimport { sortBy } from 'lodash';\r\nimport {Table, Button} from 'semantic-ui-react';\r\nimport './Table.css';\r\nimport SingleItem from \"../SingleItem/SingleItem\";\r\n\r\nconst sortGoods = {\r\n    none: list => list,\r\n    title: list => sortBy(list, (o) => o.data.title),\r\n    price: list => sortBy(list, (o) => o.data.price),\r\n    discount: list => sortBy(list, (o) => o.data.discount)\r\n};\r\n\r\nconst TableContent = ({goods, sortType, isReverseOff, searchValue, isSearchIdMatched, searchId, itemsOnPage, showMoreItems, minCost, maxCost}) => {\r\n    let isSingle = false;\r\n\r\n    const searchString = searchValue.toLowerCase().trim();\r\n\r\n    const sortedGoods = (\r\n        isReverseOff && sortType !== 'discount'?\r\n            sortGoods[sortType](goods) :\r\n            sortGoods[sortType](goods).reverse())\r\n        .filter(item => {\r\n            const {data: {title, id}} = item;\r\n            if (id === searchString) isSingle = true;\r\n            return title.toLowerCase().includes(searchString) || id === searchString;\r\n        })\r\n        .filter(item => {\r\n            const {data: { price }} = item;\r\n            const min = Number(minCost);\r\n            const max = Number(maxCost);\r\n            return (price >= min && price <= max);\r\n        });\r\n\r\n    const isBtnDisabled = () => {\r\n        const goodsLen = sortedGoods.length;\r\n        return (goodsLen >= itemsOnPage);\r\n    };\r\n\r\n\r\n    return (\r\n        <Table className='Table' celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>id</Table.HeaderCell>\r\n                    <Table.HeaderCell>title</Table.HeaderCell>\r\n                    <Table.HeaderCell>image</Table.HeaderCell>\r\n                    <Table.HeaderCell>price</Table.HeaderCell>\r\n                    <Table.HeaderCell>sale</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {\r\n                    (isSingle) ?\r\n                        <SingleItem data={sortedGoods}/> :\r\n                        sortedGoods.slice(0, itemsOnPage).map((item) => {\r\n                            const {data} = item;\r\n                            return (\r\n                                <Table.Row key={data.id}>\r\n                                    <Table.Cell>{data.id}</Table.Cell>\r\n                                    <Table.Cell>{data.title}</Table.Cell>\r\n                                    <Table.Cell>\r\n                                        <img className='Table__image'\r\n                                             src={data.base_url}\r\n                                             alt=''/>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{data.price}</Table.Cell>\r\n                                    <Table.Cell>{data.discount}%</Table.Cell>\r\n                                </Table.Row>\r\n                            );\r\n                        })\r\n                }\r\n            </Table.Body>\r\n\r\n            <Table.Footer>\r\n                <Table.Row>\r\n                    <Table.HeaderCell colSpan='5'>\r\n                        {\r\n                            (isBtnDisabled()) ?\r\n                                <Button onClick={() => showMoreItems()}>показать еще</Button> :\r\n                                <Button disabled>показать еще</Button>\r\n                        }\r\n                    </Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n    );\r\n}\r\n\r\n\r\nexport default TableContent;\r\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Sort from './components/Sort/Sort';\nimport Table from './components/Table/Table';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goods: null,\n            sortType: \"none\",\n            isReverseOff: true,\n            searchValue: \"\",\n            searchId: false,\n            itemsOnPage: 5,\n            defaultItemsOnPage: 5,\n            minCost: 0,\n            maxCost: Infinity\n        };\n\n        this.setGoods = this.setGoods.bind(this);\n        this.changeSort = this.changeSort.bind(this);\n        this.onChangeInput = this.onChangeInput.bind(this);\n        this.isSearchIdMatched = this.isSearchIdMatched.bind(this);\n        this.showMoreItems = this.showMoreItems.bind(this);\n        this.onMinChange = this.onMinChange.bind(this);\n        this.onMaxChange = this.onMaxChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchGoods();\n    }\n\n    fetchGoods() {\n        axios({\n            method: 'get',\n            url: './shop.json',\n            timeout: 10000\n        })\n            .then(result => this.setGoods(result.data))\n            .catch(error => this.setState({ error }))\n    }\n\n    setGoods(data) {\n        this.setState(data);\n    }\n\n    changeSort(sortType) {\n        this.setState({\n            sortType,\n            isReverseOff: !this.state.isReverseOff\n        });\n    }\n\n    onChangeInput( {target: { value }} ) {\n        this.setState({\n            searchValue: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    isSearchIdMatched(value) {\n        this.setState({\n            searchId: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    showMoreItems() {\n        const { itemsOnPage } = this.state;\n        this.setState({\n            itemsOnPage: itemsOnPage + itemsOnPage\n        });\n    }\n\n    onMinChange({target: { value }}) {\n        this.setState({\n            minCost: value,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    onMaxChange({target: { value }}) {\n        const max = value === '' ? Infinity : value;\n        this.setState({\n            maxCost: max,\n            itemsOnPage: this.state.defaultItemsOnPage\n        });\n    }\n\n    render() {\n        const { goods, sortType, isReverseOff, searchValue, searchId, itemsOnPage, minCost, maxCost } = this.state;\n        return (\n            <div className='App'>\n                {\n                    (!goods)?\n                        <h1>Загрузка</h1>:\n                        <div>\n                            <Sort\n                                changeSort={this.changeSort}\n                                onChangeInput={this.onChangeInput}\n                                onMinChange={this.onMinChange}\n                                onMaxChange={this.onMaxChange}\n                            />\n                            <Table\n                                goods={goods}\n                                sortType={sortType}\n                                isReverseOff={isReverseOff}\n                                searchValue={searchValue}\n                                isSearchIdMatched={this.isSearchIdMatched}\n                                searchId={searchId}\n                                itemsOnPage={itemsOnPage}\n                                showMoreItems={this.showMoreItems}\n                                minCost={minCost}\n                                maxCost={maxCost}\n                            />\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}